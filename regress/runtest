#!/bin/sh

#  $NiH: runtest,v 1.3 2002/04/11 23:52:45 dillo Exp $
#
#  runtest -- run regression tests
#  Copyright (C) 2002 Dieter Baron and Thomas Klaunser
#
#  This file is part of cg, a program to assemble and decode binary Usenet
#  postings.  The authors can be contacted at <nih@giga.or.at>
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

# runtest TESTNAME EXIT-CODE OUTPUT-FILENAMES
# 
# files: 
#   input files are TESTNAME.in*
#   testdec output is compared to TESTNAME.log
#   output files are compared to TESTNAME.out.*
# 
# environment variables:
#   VERBOSE: if set, be more verbose (e.g., output diffs)
#   NOCLEANUP: if set, don't delete directory test is run in

die() {
	echo "$0: $*" >&2;
	cleanup;
	exit 2;
}

fail() {
	echo "${TEST} -- FAILED: $*";
	cleanup;
	exit 1;
}

succeed() {
	if [ ! -z ${VERBOSE} ]
	then
		echo "${TEST} -- passed";
	fi
	cleanup;
	exit 0;
}

cleanup() {
	cd ..;
	if [ -z "${NOCLEANUP}" ]
	then
		rm -r ${DIR};
	fi
}

checkfile() {
	if [ ! -f "$2" ]
	then
		fail "missing output file: '$2'"
	else
		diff -q "$1" "$2" > /dev/null
		if [ $? -ne 0 ]
		then
			if [ ! -z ${VERBOSE} ]
			then
				diff -u "$1" "$2"
			fi
			fail "$3"
		fi
		rm "$2"
	fi
}


TEST=$1
shift
RET=$1
shift
DIR=${TEST}.d$$
if [ -z ${srcdir} ]
then
    srcdir=..
else
	# XXX: fix for absolute srcdir?
	srcdir=../${srcdir}
fi

if [ -z ${TESTDEC} ]
then
    TESTDEC=../../testdec
fi

# XXX: set up trap to cleanup

mkdir ${DIR} || ( die "cannot create test directory ${DIR}" )
cd ${DIR} || ( die "cannot cd to test directory ${DIR}" )

if [ ! -z ${VERBOSE} ]
then
	echo "running: ${TESTDEC} ${srcdir}/${TEST}.in*"
fi
${TESTDEC} ${srcdir}/${TEST}.in* > testdec.out 2>&1
ret=$?

if [ $ret -ne ${RET} ]
then
	fail "unexpected exit status: got $ret, expected ${RET}"
fi

checkfile ${srcdir}/${TEST}.log testdec.out "unexpected output"

i=1
for f in "$@"
do
	checkfile ${srcdir}/${TEST}.out.$i "$f" "unexpected file content: '$f'"
	i=`expr $i + 1`
done

if [ `ls | wc -l` -ne 0 ]
then
	fail "unexpected files: `ls -m`"
fi

succeed
